import main
player_one = main.Player('One')
player_two = main.Player('Two')

new_deck = main.Deck()
new_deck.shuffle()

for x in range(26):
    player_one.add_cards(new_deck.deal_one())
    player_two.add_cards(new_deck.deal_one())

game_on = True

round_num = 0
while game_on:
    round_num += 1
    print(f'Round {round_num}')

    '''check to see if player is out of cards'''
    if len(player_one.all_cards) == 0:
        print('Player one is out of cards, GAME OVER! Player two WIN!')
        game_on = False
        break

    if len(player_two.all_cards) == 0:
        print('Player two is out of cards, GAME OVER! Player one WIN!')
        game_on = False
        break

    '''start new round and reset current cards on the table'''
    player_one_cards = []
    player_one_cards.append(player_one.remove_one())

    player_two_cards = []
    player_two_cards.append(player_two.remove_one())

    war = True

    while war:

        if player_one_cards[-1].value > player_two_cards[-1].value:
            '''plyer one win'''
            player_one.add_cards(player_one_cards)
            player_one.add_cards(player_two_cards)
            war = False

        elif player_one_cards[-1].value < player_two_cards[-1].value:
            '''player two win'''
            player_two.add_cards(player_one_cards)
            player_two.add_cards(player_two_cards)
            war = False

        else:
            print('WAR!')
            '''first check if player one and two has enough cards for war, we need 5 cards to continue'''
            if len(player_one.all_cards) < 5:
                print('Player One has not enough cards to continue game. Game is over! Player Two WIN!')
                game_on = False
                break

            elif len(player_two.all_cards) < 5:
                print('Player Two has not enough cards to continue game. Game is over! Player One WIN!')
                game_on = False
                break

            else:
                for num in range(5):
                    player_one_cards.append(player_one.remove_one())
                    player_two_cards.append(player_two.remove_one())






